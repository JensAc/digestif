source = {
  url = "https://github.com/wspr/unicode-math/",
  license = "https://www.latex-project.org/lppl/lppl-1-3.txt"
}

commands = {
  Bbbk = {
    doc = "mathematical double-struck small k",
    symbol = "ùïú"
  },
  Bumpeq = {
    doc = "bumpy equals",
    symbol = "‚âé"
  },
  Cap = {
    doc = "/cap /doublecap b: double intersection",
    symbol = "‚ãí"
  },
  Cup = {
    doc = "/cup /doublecup b: double union",
    symbol = "‚ãì"
  },
  Doteq = {
    doc = "/doteqdot /doteq r: equals, even dots",
    symbol = "‚âë"
  },
  Finv = {
    doc = "turned capital f",
    symbol = "‚Ñ≤"
  },
  Game = {
    doc = "turned sans-serif capital g",
    symbol = "‚ÖÅ"
  },
  Lleftarrow = {
    doc = "left triple arrow",
    symbol = "‚áö"
  },
  Lsh = {
    doc = "/lsh a:",
    symbol = "‚Ü∞"
  },
  Rrightarrow = {
    doc = "right triple arrow",
    symbol = "‚áõ"
  },
  Rsh = {
    doc = "/rsh a:",
    symbol = "‚Ü±"
  },
  Subset = {
    doc = "double subset",
    symbol = "‚ãê"
  },
  Supset = {
    doc = "double superset",
    symbol = "‚ãë"
  },
  Vdash = {
    doc = "double vertical, dash",
    symbol = "‚ä©"
  },
  Vvdash = {
    doc = "triple vertical, dash",
    symbol = "‚ä™"
  },
  approxeq = {
    doc = "approximate, equals",
    symbol = "‚âä"
  },
  backprime = {
    doc = "reverse prime, not superscripted",
    symbol = "‚Äµ"
  },
  backsim = {
    doc = "reverse similar",
    symbol = "‚àΩ"
  },
  backsimeq = {
    doc = "reverse similar, equals",
    symbol = "‚ãç"
  },
  barwedge = {
    doc = "bar, wedge (large wedge)",
    symbol = "‚äº"
  },
  because = {
    doc = "because",
    symbol = "‚àµ"
  },
  beth = {
    doc = "beth, hebrew",
    symbol = "‚Ñ∂"
  },
  between = {
    doc = "between",
    symbol = "‚â¨"
  },
  bigstar = {
    doc = "star, filled",
    symbol = "‚òÖ"
  },
  blacktriangle = {
    doc = "up triangle, filled",
    symbol = "‚ñ¥"
  },
  blacktriangledown = {
    doc = "down triangle, filled",
    symbol = "‚ñæ"
  },
  blacktriangleleft = {
    doc = "(large) left triangle, filled",
    symbol = "‚óÄ"
  },
  blacktriangleright = {
    doc = "(large) right triangle, filled",
    symbol = "‚ñ∂"
  },
  boxdot = {
    doc = "/dotsquare /boxdot b: small dot in box",
    symbol = "‚ä°"
  },
  boxminus = {
    doc = "minus sign in box",
    symbol = "‚äü"
  },
  boxplus = {
    doc = "plus sign in box",
    symbol = "‚äû"
  },
  boxtimes = {
    doc = "multiply sign in box",
    symbol = "‚ä†"
  },
  bumpeq = {
    doc = "bumpy equals, equals",
    symbol = "‚âè"
  },
  circeq = {
    doc = "circle, equals",
    symbol = "‚âó"
  },
  circledast = {
    doc = "asterisk in circle",
    symbol = "‚äõ"
  },
  circledcirc = {
    doc = "small circle in circle",
    symbol = "‚äö"
  },
  circleddash = {
    doc = "hyphen in circle",
    symbol = "‚äù"
  },
  complement = {
    doc = "complement sign",
    symbol = "‚àÅ"
  },
  curlyeqprec = {
    doc = "curly equals, precedes",
    symbol = "‚ãû"
  },
  curlyeqsucc = {
    doc = "curly equals, succeeds",
    symbol = "‚ãü"
  },
  curlyvee = {
    doc = "curly logical or",
    symbol = "‚ãé"
  },
  curlywedge = {
    doc = "curly logical and",
    symbol = "‚ãè"
  },
  curvearrowleft = {
    doc = "left curved arrow",
    symbol = "‚Ü∂"
  },
  curvearrowright = {
    doc = "right curved arrow",
    symbol = "‚Ü∑"
  },
  daleth = {
    doc = "daleth, hebrew",
    symbol = "‚Ñ∏"
  },
  divideontimes = {
    doc = "division on times",
    symbol = "‚ãá"
  },
  dotplus = {
    doc = "plus sign, dot above",
    symbol = "‚àî"
  },
  doublebarwedge = {
    doc = "logical and with double overbar",
    symbol = "‚©û"
  },
  downdownarrows = {
    doc = "two down arrows",
    symbol = "‚áä"
  },
  downharpoonleft = {
    doc = "down harpoon-left",
    symbol = "‚áÉ"
  },
  downharpoonright = {
    doc = "down harpoon-right",
    symbol = "‚áÇ"
  },
  eqcirc = {
    doc = "circle on equals sign",
    symbol = "‚âñ"
  },
  eqsim = {
    doc = "equals, similar",
    symbol = "‚âÇ"
  },
  eqslantgtr = {
    doc = "slanted equal to or greater-than",
    symbol = "‚™ñ"
  },
  eqslantless = {
    doc = "slanted equal to or less-than",
    symbol = "‚™ï"
  },
  fallingdotseq = {
    doc = "equals, falling dots",
    symbol = "‚âí"
  },
  geqq = {
    doc = "greater, double equals",
    symbol = "‚âß"
  },
  geqslant = {
    doc = "greater-than or slanted equal to",
    symbol = "‚©æ"
  },
  ggg = {
    doc = "/ggg /gg /gggtr r: triple greater-than",
    symbol = "‚ãô"
  },
  gimel = {
    doc = "gimel, hebrew",
    symbol = "‚Ñ∑"
  },
  gnapprox = {
    doc = "greater-than and not approximate",
    symbol = "‚™ä"
  },
  gneq = {
    doc = "greater-than and single-line not equal to",
    symbol = "‚™à"
  },
  gneqq = {
    doc = "greater, not double equals",
    symbol = "‚â©"
  },
  gnsim = {
    doc = "greater, not similar",
    symbol = "‚ãß"
  },
  gtrapprox = {
    doc = "greater-than or approximate",
    symbol = "‚™Ü"
  },
  gtrdot = {
    doc = "greater than, with dot",
    symbol = "‚ãó"
  },
  gtreqless = {
    doc = "greater, equals, less",
    symbol = "‚ãõ"
  },
  gtreqqless = {
    doc = "greater-than above double-line equal above less-than",
    symbol = "‚™å"
  },
  gtrless = {
    doc = "greater, less",
    symbol = "‚â∑"
  },
  gtrsim = {
    doc = "greater, similar",
    symbol = "‚â≥"
  },
  hslash = {
    doc = "/hslash - variant planck's over 2pi",
    symbol = "‚Ñè"
  },
  intercal = {
    doc = "intercal",
    symbol = "‚ä∫"
  },
  leftarrowtail = {
    doc = "left arrow-tailed",
    symbol = "‚Ü¢"
  },
  leftleftarrows = {
    doc = "two left arrows",
    symbol = "‚áá"
  },
  leftrightarrows = {
    doc = "left arrow over right arrow",
    symbol = "‚áÜ"
  },
  leftrightharpoons = {
    doc = "left harpoon over right",
    symbol = "‚áã"
  },
  leftrightsquigarrow = {
    doc = "left and right arr-wavy",
    symbol = "‚Ü≠"
  },
  leftthreetimes = {
    doc = "left semidirect product",
    symbol = "‚ãã"
  },
  leqq = {
    doc = "less, double equals",
    symbol = "‚â¶"
  },
  leqslant = {
    doc = "less-than or slanted equal to",
    symbol = "‚©Ω"
  },
  lessapprox = {
    doc = "less-than or approximate",
    symbol = "‚™Ö"
  },
  lessdot = {
    doc = "less than, with dot",
    symbol = "‚ãñ"
  },
  lesseqgtr = {
    doc = "less, equals, greater",
    symbol = "‚ãö"
  },
  lesseqqgtr = {
    doc = "less-than above double-line equal above greater-than",
    symbol = "‚™ã"
  },
  lessgtr = {
    doc = "less, greater",
    symbol = "‚â∂"
  },
  lesssim = {
    doc = "less, similar",
    symbol = "‚â≤"
  },
  lll = {
    doc = "/ll /lll /llless r: triple less-than",
    symbol = "‚ãò"
  },
  lnapprox = {
    doc = "less-than and not approximate",
    symbol = "‚™â"
  },
  lneq = {
    doc = "less-than and single-line not equal to",
    symbol = "‚™á"
  },
  lneqq = {
    doc = "less, not double equals",
    symbol = "‚â®"
  },
  lnsim = {
    doc = "less, not similar",
    symbol = "‚ã¶"
  },
  looparrowleft = {
    doc = "left arrow-looped",
    symbol = "‚Ü´"
  },
  looparrowright = {
    doc = "right arrow-looped",
    symbol = "‚Ü¨"
  },
  ltimes = {
    doc = "times sign, left closed",
    symbol = "‚ãâ"
  },
  measuredangle = {
    doc = "angle-measured",
    symbol = "‚à°"
  },
  multimap = {
    doc = "/multimap a:",
    symbol = "‚ä∏"
  },
  nLeftarrow = {
    doc = "not implied by",
    symbol = "‚áç"
  },
  nLeftrightarrow = {
    doc = "not left and right double arrows",
    symbol = "‚áé"
  },
  nRightarrow = {
    doc = "not implies",
    symbol = "‚áè"
  },
  nVDash = {
    doc = "not double vert, double dash",
    symbol = "‚äØ"
  },
  nVdash = {
    doc = "not double vertical, dash",
    symbol = "‚äÆ"
  },
  ncong = {
    doc = "not congruent with",
    symbol = "‚âá"
  },
  nexists = {
    doc = "negated exists",
    symbol = "‚àÑ"
  },
  ngeq = {
    doc = "not greater-than-or-equal",
    symbol = "‚â±"
  },
  ngtr = {
    doc = "not greater-than",
    symbol = "‚âØ"
  },
  nleftarrow = {
    doc = "not left arrow",
    symbol = "‚Üö"
  },
  nleftrightarrow = {
    doc = "not left and right arrow",
    symbol = "‚ÜÆ"
  },
  nleq = {
    doc = "not less-than-or-equal",
    symbol = "‚â∞"
  },
  nless = {
    doc = "not less-than",
    symbol = "‚âÆ"
  },
  nmid = {
    doc = "negated mid",
    symbol = "‚à§"
  },
  nparallel = {
    doc = "not parallel",
    symbol = "‚à¶"
  },
  nprec = {
    doc = "not precedes",
    symbol = "‚äÄ"
  },
  nrightarrow = {
    doc = "not right arrow",
    symbol = "‚Üõ"
  },
  nsim = {
    doc = "not similar",
    symbol = "‚âÅ"
  },
  nsubseteq = {
    doc = "not subset, equals",
    symbol = "‚äà"
  },
  nsucc = {
    doc = "not succeeds",
    symbol = "‚äÅ"
  },
  nsupseteq = {
    doc = "not superset, equals",
    symbol = "‚äâ"
  },
  ntrianglelefteq = {
    doc = "not left triangle, equals",
    symbol = "‚ã¨"
  },
  ntrianglerighteq = {
    doc = "not right triangle, equals",
    symbol = "‚ã≠"
  },
  nvDash = {
    doc = "not vertical, double dash",
    symbol = "‚ä≠"
  },
  nvdash = {
    doc = "not vertical, dash",
    symbol = "‚ä¨"
  },
  pitchfork = {
    doc = "pitchfork",
    symbol = "‚ãî"
  },
  precapprox = {
    doc = "precedes above almost equal to",
    symbol = "‚™∑"
  },
  preccurlyeq = {
    doc = "precedes, curly equals",
    symbol = "‚âº"
  },
  precnapprox = {
    doc = "precedes above not almost equal to",
    symbol = "‚™π"
  },
  precneqq = {
    doc = "precedes above not equal to",
    symbol = "‚™µ"
  },
  precnsim = {
    doc = "precedes, not similar",
    symbol = "‚ã®"
  },
  precsim = {
    doc = "precedes, similar",
    symbol = "‚âæ"
  },
  rightarrowtail = {
    doc = "right arrow-tailed",
    symbol = "‚Ü£"
  },
  rightleftarrows = {
    doc = "right arrow over left arrow",
    symbol = "‚áÑ"
  },
  rightrightarrows = {
    doc = "two right arrows",
    symbol = "‚áâ"
  },
  rightsquigarrow = {
    doc = "rightwards squiggle arrow",
    symbol = "‚áù"
  },
  rightthreetimes = {
    doc = "right semidirect product",
    symbol = "‚ãå"
  },
  risingdotseq = {
    doc = "equals, rising dots",
    symbol = "‚âì"
  },
  rtimes = {
    doc = "times sign, right closed",
    symbol = "‚ãä"
  },
  smallsetminus = {
    doc = "small set minus (cf. reverse solidus)",
    symbol = "‚àñ"
  },
  sphericalangle = {
    doc = "angle-spherical",
    symbol = "‚à¢"
  },
  subseteqq = {
    doc = "subset of above equals sign",
    symbol = "‚´Ö"
  },
  subsetneq = {
    doc = "subset, not equals",
    symbol = "‚ää"
  },
  subsetneqq = {
    doc = "subset of above not equal to",
    symbol = "‚´ã"
  },
  succapprox = {
    doc = "succeeds above almost equal to",
    symbol = "‚™∏"
  },
  succcurlyeq = {
    doc = "succeeds, curly equals",
    symbol = "‚âΩ"
  },
  succnapprox = {
    doc = "succeeds above not almost equal to",
    symbol = "‚™∫"
  },
  succneqq = {
    doc = "succeeds above not equal to",
    symbol = "‚™∂"
  },
  succnsim = {
    doc = "succeeds, not similar",
    symbol = "‚ã©"
  },
  succsim = {
    doc = "succeeds, similar",
    symbol = "‚âø"
  },
  supseteqq = {
    doc = "superset of above equals sign",
    symbol = "‚´Ü"
  },
  supsetneq = {
    doc = "superset, not equals",
    symbol = "‚äã"
  },
  supsetneqq = {
    doc = "superset of above not equal to",
    symbol = "‚´å"
  },
  therefore = {
    doc = "therefore",
    symbol = "‚à¥"
  },
  triangledown = {
    doc = "down triangle, open",
    symbol = "‚ñø"
  },
  trianglelefteq = {
    doc = "left triangle, equals",
    symbol = "‚ä¥"
  },
  triangleq = {
    doc = "triangle, equals",
    symbol = "‚âú"
  },
  trianglerighteq = {
    doc = "right triangle, equals",
    symbol = "‚äµ"
  },
  twoheadleftarrow = {
    doc = "left two-headed arrow",
    symbol = "‚Üû"
  },
  twoheadrightarrow = {
    doc = "right two-headed arrow",
    symbol = "‚Ü†"
  },
  upharpoonleft = {
    doc = "up harpoon-left",
    symbol = "‚Üø"
  },
  upharpoonright = {
    doc = "/upharpoonright /restriction a: up harpoon-right",
    symbol = "‚Üæ"
  },
  upuparrows = {
    doc = "two up arrows",
    symbol = "‚áà"
  },
  vDash = {
    doc = "vertical, double dash",
    symbol = "‚ä®"
  },
  varkappa = {
    doc = "rounded small kappa, greek",
    symbol = "œ∞"
  },
  varnothing = {
    doc = "circle, slash",
    symbol = "‚àÖ"
  },
  vartriangle = {
    doc = "/triangle - up triangle, open",
    symbol = "‚ñµ"
  },
  vartriangleleft = {
    doc = "left triangle, open, variant",
    symbol = "‚ä≤"
  },
  vartriangleright = {
    doc = "right triangle, open, variant",
    symbol = "‚ä≥"
  },
  veebar = {
    doc = "logical or, bar below (large vee); exclusive disjunction",
    symbol = "‚äª"
  }
}
